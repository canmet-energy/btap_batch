---
# Run configuration
:analysis_configuration:

  # BTAP Batch version
  :btap_batch_version: 1.0.005

  # Choices are:
  #       local : Run locally.. Good to test out runs on small batches before sending to AWS.
  #       aws_batch: use for analyses with > 1000 simulations: This is currently only available for NRCan staff.  If you would wish to make used of Amazon cloud computing, please contact us.
  :compute_environment: aws_batch

  # Use btap_public_cli for full opensource version. For btap_private_cli to use costing. Contact us if you wish to work with costing data.
  :image_name: 'btap_private_cli'

  # Set to True if you wish to build the image from scratch with the below branches fresh,
  # pulling from the most recent branches indicated below. If set to false, it will use the last version built locally or
  # on AWS. This can save time (~10minute) if set to false when you have already built the image and expect no changes.
  :nocache: false

  # Branch from https://github.com/NREL/openstudio-standards. Typically 'nrcan_prod' branch.
  # Developers or people liking to work on unstable code can use 'nrcan'
  :os_standards_branch: 'nrcan_prod'

  # Branch from https://github.com/canmet-energy/btap_costing. Typically 'nrcan_prod'
  # Developers or people liking to work on unstable code can use 'master'
  :btap_costing_branch: 'nrcan_prod'

  # DO NOT CHANGE: Openstudio Version only 3.0.1 available
  :os_version: '3.2.1'

  # The name of the analysis. Can be a user friendly name. This is how it will appear on your local system or on the S3
  # bucket. for example if 'example_analysis' on s3 the analysis run input/output files will be here in our s3 bucket
  # s3://834599497928/phylroy.lopez/example_analysis
  :analysis_name: 'idp_example'

  # Do you wish to run the simulations?
  :run_annual_simulation: true

  # Do you wish to enable automated costing for materials, labour, equipment? Disabled in btap_public_cli version.
  :enable_costing: true

  # Set this to true or None to perform a reference run of all the building_type, primary_heating_fuel, and location present in this file ahead of the analysis.
  # This will automatically create comparisons to the reference cases generated in the analysis.
  :run_reference: true

###########################################     ALGORITHM        #######################################################
  :algorithm:
    :type: idp # This will run elimination, sensitivity and optimization all in the same analysis.
    # Population is the size of each generation. A good number is 100-200 if using AWS or set to the number of CPU cores you
    # have on your local system set to (#CPU cores *2 - 1). To simply test it is set to 5.
    :population: 5
    # The number of generations. The more generations you have the more the optimization shape (pareto curve) will be defined.
    :n_generations: 2
    # examine the nsga implementation for more details on these inputs if you wish to change https://pymoo.org/algorithms/nsga2.html
    :prob: 0.85
    :eta: 3.0
    # You can add more than one output to optimize down. Below are just a sample of what you can optimize to. Below we are
    # optimizing to minimize peaks, and ghg
    :minimize_objectives: [
        'heating_peak_w_per_m_sq', # Peak heating load in watts.
        #'cooling_peak_w_per_m_sq', # Peak cooling load in watts.
        #'bc_step_code_tedi_kwh_per_m_sq', # TEDI, based on bc step codes.
        #'bc_step_code_meui_kwh_per_m_sq', # MEUI, based on bc step codes.
        'cost_utility_ghg_total_kg_per_m_sq', #Total ghg from all utilities.
        #'cost_utility_neb_total_cost_per_m_sq', # Total Utility costs based on national energy board rates.
        'energy_eui_total_gj_per_m_sq', # Total energy consumed by building
        #'cost_equipment_total_cost_per_m_sq' # This is only available in btap_private_cli
    ]

###########################################     Hourly Data     #######################################################
  :output_variables: []
  :output_meters: []

#########################################  BUILDING OPTIONS  ###########################################################
# Building options
:building_options:
  :building_type: [
    #  "SecondarySchool",
    # "PrimarySchool",
    # "SmallOffice",
    # "MediumOffice",
    # "LargeOffice",
    # "SmallHotel",
    # "LargeHotel",
    # "Warehouse",
    # "RetailStandalone",
    # "RetailStripmall",
    # "QuickServiceRestaurant",
     "FullServiceRestaurant",
    # "MidriseApartment",
    # "HighriseApartment",
    # "LowriseApartment",
    #"Hospital",
    #"Outpatient"
  ]
  # The standard template to use for baseline assumptions.
  :template: [
    #  "BTAPPRE1980",
    #  "BTAP1980TO2010",
    #  "NECB2011",
    #  "NECB2015",
      "NECB2017"
  ]
  :epw_file: [
      'CAN_QC_Montreal-Trudeau.Intl.AP.716270_CWEC2016.epw',
      #'CAN_NS_Halifax.Dockyard.713280_CWEC2016.epw',
      #'CAN_AB_Edmonton.Intl.AP.711230_CWEC2016.epw',
      #'CAN_BC_Vancouver.Intl.AP.718920_CWEC2016.epw',
      #'CAN_AB_Calgary.Intl.AP.718770_CWEC2016.epw',
      #'CAN_ON_Toronto.Pearson.Intl.AP.716240_CWEC2016.epw',
      #'CAN_YT_Whitehorse.Intl.AP.719640_CWEC2016.epw'
  ]
  :primary_heating_fuel: [
      "Electricity",
     # "NaturalGas",
     # "FuelOilNo2"
  ]
  :dcv_type: [
      'NECB_Default',
      'No_DCV',
      'Occupancy_based_DCV',
      'CO2_based_DCV'
  ]
  :lights_type: [
      'NECB_Default',
      'LED'
  ]
  :lights_scale: [ 'NECB_Default',
    # '0.5',
    # '0.01'
  ]
  # Is this different from the LED option?
  :daylighting_type: [ 'NECB_Default',
                       'add_daylighting_controls'
  ]
  :ecm_system_name: [
      'NECB_Default',
#      'HS09_CCASHP_Baseboard',
#      'HS08_CCASHP_VRF',
#      'HS11_ASHP_PTHP',
#      'HS12_ASHP_Baseboard'
  ]

  :erv_package: [ 'NECB_Default',
                  "NECB_Default_All",
                  "Plate-All",
      #            "Plate-Existing",
                  "Rotary-All",
      #            "Rotary-Existing"
  ]
  # What are the existing vs all versions?
  :boiler_eff: [
      "NECB_Default",
     # "NECB 88% Efficient Condensing Boiler",
     # "Viessmann Vitocrossal 300 CT3-17 96.2% Efficient Condensing Gas Boiler"
  ]
  :furnace_eff: [
      "NECB_Default",
     # "NECB 85% Efficient Condensing Gas Furnace"
  ]
  :shw_eff: [
      "NECB_Default",
     # "Natural Gas Power Vent with Electric Ignition",
     # "Natural Gas Direct Vent with Electric Ignition"
  ]
  # Default DHW is consistent with primary heating fuel
  :ext_wall_cond: [ 'NECB_Default',
                    '0.314',
      #              '0.278',
      #              '0.247',
                    '0.210',
                    '0.183'
  ]

  :ext_floor_cond: [ 'NECB_Default',
                     '0.227',
                     '0.183',
      #               '0.162',
                     '0.142'
  ]
  :ext_roof_cond: [ 'NECB_Default',
                    '0.227',
      #              '0.193',
      #              '0.183',
                    '0.162',
      #              '0.142',
      #              '0.138',
                    '0.121'
  ]
  :ground_wall_cond: [ 'NECB_Default',
                       '0.568',
      #                 '0.379',
                       '0.284',
                       '0.210'
  ]

  :ground_floor_cond: [ 'NECB_Default',
                        '0.758',
                        '0.379'
  ]

  :ground_roof_cond: [ 'NECB_Default',
                       '0.568',
      #                 '0.379' ,
                       '0.284',
                       '0.210' ]
  :door_construction_cond: [ 'NECB_Default',
                             '2.4',
                             '2.2',
                             '1.6'
  ]
  :fixed_window_cond: [ 'NECB_Default',
                        '2.4',
                        '2.2',
                        '1.6'
  ]
  :glass_door_cond: [ 'NECB_Default',
                      '2.4',
                      '2.2',
                      '1.6'
  ]
  :overhead_door_cond: [ 'NECB_Default',
                         '2.4',
                         '2.2',
                         '1.6'
  ]
  :skylight_cond: [ 'NECB_Default',
      #              '2.4',
      #              '2.2',
      #              '1.6'
  ]
  :glass_door_solar_trans: [ 'NECB_Default',
  #'0.05', '0.95'
  ]
  :fixed_wind_solar_trans: [ 'NECB_Default',
  '0.2',
  '0.3',
  '0.4',
  '0.5',
  '0.6'
  ]
  # This is the same as SHGC
  :skylight_solar_trans: [ 'NECB_Default',
  #'0.05', '0.95'
  ]
  :fdwr_set: [ 'NECB_Default']
  # Should we optimize for FDWR? Probably not. Better to assume default, since it will just pick lowest WWR which isn't realistic.
  :srr_set: [ '0.0' ]
  :rotation_degrees: [
  #'NECB_Default', '45.0',
  '90.0'
  #, '135.0','180.0','225.0', '270.0', '315.0','360.0'
   ]
  # Picking the worst orientation (major axis of building oriented N-S)
  :scale_x: [ '1.0' ]
  :scale_y: [ '1.0' ]
  :scale_z: [ '1.0' ]
  :pv_ground_type: [ # Two options: (1) nil/none/false/'NECB_Default', (2) 'add_pv_ground'
    'NECB_Default',
    #'add_pv_ground'
  ]
  :pv_ground_total_area_pv_panels_m2: [ 'NECB_Default' ] # Options: (1) nil/none/false, (2) 'NECB_Default' (i.e. building footprint), (3) area value (e.g. 50)
  :pv_ground_tilt_angle: [ 'NECB_Default' ] # Options: (1) 'NECB_Default' (i.e. latitude), (2) tilt angle value (e.g. 20)
  :pv_ground_azimuth_angle: [ 'NECB_Default' ] # Options: (1) 'NECB_Default' (i.e. south), (2) azimuth angle value (e.g. 90)
  :pv_ground_module_description: [ # Options: (1) nil/none/false, (2) 'NECB_Default' (i.e. Standard), (3) other options ('Standard', 'Premium', ThinFilm')
    'NECB_Default',
    #'Premium',
    #'ThinFilm'
  ]
  :adv_dx_units: [
      'NECB_Default',
      'Carrier WeatherExpert'
  ]
  :nv_type: [  # Two options: (1) nil/none/false/'NECB_Default', (2) 'add_nv'
    'NECB_Default',
    #'add_nv'
  ]
  :nv_opening_fraction: [ 'NECB_Default' ] #options: (1) nil/none/false (2) 'NECB_Default' (i.e. 0.1)
  :nv_temp_out_min: [ 'NECB_Default' ] #options: (1) nil/none/false(2) 'NECB_Default' (i.e. 13.0 based on inputs from Michel Tardif re a real school in QC)
  :nv_delta_temp_in_out: [ 'NECB_Default' ] #options: (1) nil/none/false (2) 'NECB_Default' (i.e. 1.0 based on inputs from Michel Tardif re a real school in QC)
  :occupancy_loads_scale: [ 'NECB_Default' ]
  :electrical_loads_scale: [ 'NECB_Default' ]
  :oa_scale: [ 'NECB_Default' ]
  :infiltration_scale: [ 'NECB_Default' ]
  :chiller_type: [
    'NECB_Default',
    #'VSD'
  ] # Options: (1) 'NECB_Default'/nil/'none'/false (i.e. do nothing), (2) e.g. 'VSD'
  :airloop_economizer_type: [  # (1) nil/'NECB_Default' (2) 'DifferentialEnthalpy (3) 'DifferentialDryBulb'
    'NECB_Default',
    #'DifferentialEnthalpy'
    #'DifferentialDryBulb'
  ]
  :shw_scale: [ # Options: (1) 'NECB_Default'/nil/'none'/false (i.e. do nothing), (2) a float number larger than 0.0
      'NECB_Default',
    #    '0.5'
  ]